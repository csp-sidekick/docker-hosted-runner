name: Deploy with Build Queue (Docker Runner)

on:
  workflow_dispatch:
    inputs:
      deployment_type:
        description: "Deployment type"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - dry-run
          - workers-only
          - sites-only

permissions:
  contents: read

env:
  NODE_VERSION: "20"
  PNPM_VERSION: "9.12.0"

jobs:
  build-1:
    name: Build Runner 1
    runs-on:
      - self-hosted
      - macos
      - docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Build Projects (1/3)
        run: pnpm run build:shared && pnpm run build:workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  build-2:
    name: Build Runner 2
    runs-on:
      - self-hosted
      - macos
      - docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Build Projects (2/3)
        run: pnpm run build:react-apps && pnpm run build:astro-sites
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  build-3:
    name: Build Runner 3
    runs-on:
      - self-hosted
      - macos
      - docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Build Projects (3/3)
        run: pnpm run build:cspsidekick
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  deploy:
    name: Deploy Worker
    needs: [build-1, build-2, build-3]
    runs-on:
      - self-hosted
      - macos
      - docker
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Deploy All Projects (Dry Run)
        if: ${{ github.event.inputs.deployment_type == 'dry-run' || github.event_name == 'pull_request' }}
        run: ./scripts/deploy-all-direct.sh dry-run
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Deploy All Projects
        if: ${{ github.event.inputs.deployment_type == 'all' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
        run: ./scripts/deploy-all-direct.sh deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Deploy Workers Only
        if: ${{ github.event.inputs.deployment_type == 'workers-only' }}
        run: |
          pnpm run build:shared
          pnpm run build:workers
          echo "🚀 Workers deployed successfully"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Deploy Static Workers Only
        if: ${{ github.event.inputs.deployment_type == 'sites-only' }}
        run: |
          pnpm run build:shared
          pnpm run build:react-apps
          pnpm run build:astro-sites
          pnpm run build:cspsidekick
          echo "🚀 Static Workers deployed successfully"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment Type**: ${{ github.event.inputs.deployment_type || 'auto (push to main)' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ All projects deployed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Deployment failed. Check logs above." >> $GITHUB_STEP_SUMMARY
          fi
